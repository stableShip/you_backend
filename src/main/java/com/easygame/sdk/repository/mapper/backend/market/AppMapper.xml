<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easygame.sdk.repository.mapper.backend.market.AppMapper">

	<resultMap id="AppTypeShowVO"
		type="com.easygame.sdk.repository.model.vo.backend.market.AppTypeShowVO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectAllAppType" resultMap="AppTypeShowVO">
		SELECT id, name
		FROM
		t_apps_type
	</select>

	<select id="checkIfAppExist" resultType="java.lang.Integer">
		SELECT
		count(t_apps.id)
		FROM
		t_apps
		WHERE
		t_apps.`name` =
		#{name,jdbcType=VARCHAR}
		<if test="id != 0">
			AND t_apps.id != #{id,jdbcType=INTEGER}
		</if>
	</select>

	<insert id="insertApp" parameterType="com.easygame.sdk.repository.model.po.App">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT @@IDENTITY
		</selectKey>
		insert into t_apps
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="lastUpdateDate != null">
				last_update_date,
			</if>
			<if test="creationDate != null">
				creation_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="lastUpdateDate != null">
				#{lastUpdateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="creationDate != null">
				#{creationDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>


	<resultMap id="AppShowVO"
		type="com.easygame.sdk.repository.model.vo.backend.market.AppShowVO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="typeName" property="appTypeName" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="hasNotification" property="hasNotification" jdbcType="INTEGER" />
		<result column="notification_selected" property="notificationSelected" jdbcType="INTEGER" />
	</resultMap>
	<select id="selectAppListByCriteria" resultMap="AppShowVO"
		parameterType="com.easygame.sdk.repository.model.dto.backend.market.AppSearchCriteriaDTO">
		SELECT
		t_apps.id,
		t_apps.`name`,
		t_apps_type.`name` AS typeName,
		t_apps.`status`,
		(
		SELECT
		count(t_apps_notification.id)
		FROM
		t_apps_notification
		WHERE
		t_apps_notification.app_id = t_apps.id
		) AS hasNotification,
		t_apps_notification_selected.app_id AS notification_selected
		FROM
		t_apps
		LEFT JOIN t_apps_type ON t_apps.type = t_apps_type.id
		LEFT JOIN t_apps_notification_selected ON t_apps.id =
		t_apps_notification_selected.app_id
		WHERE
		1 = 1
		<if test="searchName != null">
			AND t_apps.`name` LIKE '%${searchName}%'
		</if>
		<if test="searchTypeId != 0">
			AND t_apps.type =#{searchTypeId,jdbcType=INTEGER}
		</if>
		ORDER BY
		t_apps_notification_selected.app_id DESC,
		t_apps.creation_date DESC

		LIMIT
		#{pagination.startRow,jdbcType=INTEGER},
		#{pagination.pageSize,jdbcType=INTEGER}
	</select>

	<select id="getAppListTotalCountByCriteria" resultType="int"
		parameterType="com.easygame.sdk.repository.model.dto.backend.market.AppSearchCriteriaDTO">
		SELECT
		count(t_apps.id)
		FROM
		t_apps
		LEFT JOIN t_apps_type ON t_apps.type = t_apps_type.id
		LEFT JOIN t_apps_notification_selected ON t_apps.id = t_apps_notification_selected.app_id
		WHERE 1 = 1
		<if test="searchName != null">
			AND t_apps.`name` LIKE '%${searchName}%'
		</if>
		<if test="searchTypeId != 0">
			AND t_apps.type =#{searchTypeId,jdbcType=INTEGER}
		</if>
	</select>

	<resultMap id="AppModifyDTO"
		type="com.easygame.sdk.repository.model.dto.backend.market.AppModifyDTO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="type" property="typeId" jdbcType="INTEGER" />
		<result column="description" property="description" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectAppByPrimaryKey" resultMap="AppModifyDTO"
		parameterType="java.lang.Integer">
		SELECT
		t_apps.id,
		t_apps.`name`,
		t_apps.type,
		t_apps.description
		FROM
		t_apps
		WHERE
		t_apps.id = #{id,jdbcType=INTEGER}
	</select>

	<update id="updateApp" parameterType="com.easygame.sdk.repository.model.po.App">
		update t_apps
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdateDate != null">
				last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>


	<select id="checkAppDeleteSecurity" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		SELECT
		count(t_cpa_promotions.id)
		FROM
		t_apps,
		t_cpa_promotions
		WHERE
		t_cpa_promotions.app_id = t_apps.id
		AND t_apps.id =
		#{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteAppImages" parameterType="java.lang.Integer">
		delete
		from
		t_apps_images
		where
		app_id = #{appId,jdbcType=INTEGER}
	</delete>

	<delete id="deleteAppInformation" parameterType="java.lang.Integer">
		delete from
		t_apps_informations
		where app_id = #{appId,jdbcType=INTEGER}
	</delete>

	<delete id="deleteApp" parameterType="java.lang.Integer">
		delete from t_apps
		where id
		= #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insertAppSequence" parameterType="com.easygame.sdk.repository.model.po.AppSequence">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="AFTER">
			SELECT @@IDENTITY
		</selectKey>
		insert into t_apps_sequence
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="appId != null">
				app_id,
			</if>
			<if test="nextVal != null">
				next_val,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="appId != null">
				#{appId,jdbcType=INTEGER},
			</if>
			<if test="nextVal != null">
				#{nextVal,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>


	<resultMap id="AppVersionShowVO"
		type="com.easygame.sdk.repository.model.vo.backend.market.AppVersionShowVO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="version_code" property="versionCode" jdbcType="VARCHAR" />
		<result column="version_name" property="versionName" jdbcType="VARCHAR" />
		<result column="size" property="size" jdbcType="INTEGER" />
		<result column="urlCount" property="urlCount" jdbcType="INTEGER" />
	</resultMap>
	<select id="selectAppVersionListByAppId" resultMap="AppVersionShowVO">
		SELECT
		t_apps_versions.id,
		t_apps_versions.version_code,
		t_apps_versions.version_name,
		t_apps_versions.size,
		(
		SELECT
		count(t_apps_download_url.id)
		FROM
		t_apps_download_url
		WHERE
		t_apps_download_url.app_version_id = t_apps_versions.id
		) AS urlCount
		FROM
		t_apps_versions
		ORDER BY t_apps_versions.id DESC
	</select>

</mapper>